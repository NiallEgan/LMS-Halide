	.file	"fast_blur.c"
	.text
	.globl	pipeline
	.type	pipeline, @function
pipeline:
.LFB3667:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$432, %rsp
	movq	%rdi, -408(%rbp)
	movq	%rsi, -416(%rbp)
	movl	%edx, -420(%rbp)
	movl	%ecx, -424(%rbp)
	movl	-420(%rbp), %eax
	subl	$1, %eax
	movl	%eax, -224(%rbp)
	movl	-224(%rbp), %eax
	subl	$1, %eax
	movl	%eax, -220(%rbp)
	movl	-424(%rbp), %eax
	subl	$1, %eax
	movl	%eax, -216(%rbp)
	movl	-216(%rbp), %eax
	subl	$1, %eax
	movl	%eax, -212(%rbp)
	movl	-220(%rbp), %eax
	imull	-212(%rbp), %eax
	movl	%eax, -208(%rbp)
	movl	-208(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, -204(%rbp)
	movl	-204(%rbp), %eax
	cltq
	movq	%rax, %rdi
	call	malloc@PLT
	movq	%rax, -8(%rbp)
	movl	$1, -232(%rbp)
	jmp	.L2
.L5:
	movl	-420(%rbp), %eax
	imull	-232(%rbp), %eax
	movl	%eax, -200(%rbp)
	movl	-232(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -196(%rbp)
	movl	-420(%rbp), %eax
	imull	-196(%rbp), %eax
	movl	%eax, -192(%rbp)
	movl	-232(%rbp), %eax
	subl	$1, %eax
	movl	%eax, -188(%rbp)
	movl	-420(%rbp), %eax
	imull	-188(%rbp), %eax
	movl	%eax, -184(%rbp)
	movl	-220(%rbp), %eax
	imull	-188(%rbp), %eax
	movl	%eax, -180(%rbp)
	movl	$1, -228(%rbp)
	jmp	.L3
.L4:
	movl	-228(%rbp), %edx
	movl	-200(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, -176(%rbp)
	movl	-176(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, -172(%rbp)
	movl	-172(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -168(%rbp)
	movl	-168(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -388(%rbp)
	movzbl	-388(%rbp), %eax
	movw	%ax, -358(%rbp)
	movl	-228(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -164(%rbp)
	movl	-164(%rbp), %edx
	movl	-200(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, -160(%rbp)
	movl	-160(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, -156(%rbp)
	movl	-156(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -152(%rbp)
	movl	-152(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -387(%rbp)
	movzbl	-387(%rbp), %eax
	movw	%ax, -356(%rbp)
	movzwl	-358(%rbp), %edx
	movzwl	-356(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -354(%rbp)
	movl	-228(%rbp), %eax
	subl	$1, %eax
	movl	%eax, -148(%rbp)
	movl	-148(%rbp), %edx
	movl	-200(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, -144(%rbp)
	movl	-144(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, -140(%rbp)
	movl	-140(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -136(%rbp)
	movl	-136(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -386(%rbp)
	movzbl	-386(%rbp), %eax
	movw	%ax, -352(%rbp)
	movzwl	-354(%rbp), %edx
	movzwl	-352(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -350(%rbp)
	movzwl	-350(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -348(%rbp)
	movl	-228(%rbp), %edx
	movl	-192(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, -132(%rbp)
	movl	-132(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, -128(%rbp)
	movl	-128(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -124(%rbp)
	movl	-124(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -385(%rbp)
	movzbl	-385(%rbp), %eax
	movw	%ax, -346(%rbp)
	movl	-164(%rbp), %edx
	movl	-192(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, -120(%rbp)
	movl	-120(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, -116(%rbp)
	movl	-116(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -112(%rbp)
	movl	-112(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -384(%rbp)
	movzbl	-384(%rbp), %eax
	movw	%ax, -344(%rbp)
	movzwl	-346(%rbp), %edx
	movzwl	-344(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -342(%rbp)
	movl	-148(%rbp), %edx
	movl	-192(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, -108(%rbp)
	movl	-108(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, -104(%rbp)
	movl	-104(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -100(%rbp)
	movl	-100(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -383(%rbp)
	movzbl	-383(%rbp), %eax
	movw	%ax, -340(%rbp)
	movzwl	-342(%rbp), %edx
	movzwl	-340(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -338(%rbp)
	movzwl	-338(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -336(%rbp)
	movzwl	-348(%rbp), %edx
	movzwl	-336(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -334(%rbp)
	movl	-228(%rbp), %edx
	movl	-184(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, -96(%rbp)
	movl	-96(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, -92(%rbp)
	movl	-92(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -88(%rbp)
	movl	-88(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -382(%rbp)
	movzbl	-382(%rbp), %eax
	movw	%ax, -332(%rbp)
	movl	-164(%rbp), %edx
	movl	-184(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, -84(%rbp)
	movl	-84(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, -80(%rbp)
	movl	-80(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -76(%rbp)
	movl	-76(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -381(%rbp)
	movzbl	-381(%rbp), %eax
	movw	%ax, -330(%rbp)
	movzwl	-332(%rbp), %edx
	movzwl	-330(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -328(%rbp)
	movl	-148(%rbp), %edx
	movl	-184(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, -72(%rbp)
	movl	-72(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, -68(%rbp)
	movl	-68(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -64(%rbp)
	movl	-64(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -380(%rbp)
	movzbl	-380(%rbp), %eax
	movw	%ax, -326(%rbp)
	movzwl	-328(%rbp), %edx
	movzwl	-326(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -324(%rbp)
	movzwl	-324(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -322(%rbp)
	movzwl	-334(%rbp), %edx
	movzwl	-322(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -320(%rbp)
	movzwl	-320(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -318(%rbp)
	movzwl	-318(%rbp), %eax
	movb	%al, -379(%rbp)
	movl	-148(%rbp), %edx
	movl	-180(%rbp), %eax
	addl	%edx, %eax
	movl	%eax, -60(%rbp)
	movl	-60(%rbp), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	addl	%edx, %eax
	movl	%eax, -56(%rbp)
	movl	-56(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -52(%rbp)
	movl	-52(%rbp), %eax
	movslq	%eax, %rdx
	movq	-8(%rbp), %rax
	addq	%rax, %rdx
	movzbl	-379(%rbp), %eax
	movb	%al, (%rdx)
	movl	-172(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -48(%rbp)
	movl	-48(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -378(%rbp)
	movzbl	-378(%rbp), %eax
	movw	%ax, -316(%rbp)
	movl	-156(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -44(%rbp)
	movl	-44(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -377(%rbp)
	movzbl	-377(%rbp), %eax
	movw	%ax, -314(%rbp)
	movzwl	-316(%rbp), %edx
	movzwl	-314(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -312(%rbp)
	movl	-140(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -40(%rbp)
	movl	-40(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -376(%rbp)
	movzbl	-376(%rbp), %eax
	movw	%ax, -310(%rbp)
	movzwl	-312(%rbp), %edx
	movzwl	-310(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -308(%rbp)
	movzwl	-308(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -306(%rbp)
	movl	-128(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -36(%rbp)
	movl	-36(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -375(%rbp)
	movzbl	-375(%rbp), %eax
	movw	%ax, -304(%rbp)
	movl	-116(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -32(%rbp)
	movl	-32(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -374(%rbp)
	movzbl	-374(%rbp), %eax
	movw	%ax, -302(%rbp)
	movzwl	-304(%rbp), %edx
	movzwl	-302(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -300(%rbp)
	movl	-104(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -28(%rbp)
	movl	-28(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -373(%rbp)
	movzbl	-373(%rbp), %eax
	movw	%ax, -298(%rbp)
	movzwl	-300(%rbp), %edx
	movzwl	-298(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -296(%rbp)
	movzwl	-296(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -294(%rbp)
	movzwl	-306(%rbp), %edx
	movzwl	-294(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -292(%rbp)
	movl	-92(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -24(%rbp)
	movl	-24(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -372(%rbp)
	movzbl	-372(%rbp), %eax
	movw	%ax, -290(%rbp)
	movl	-80(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -20(%rbp)
	movl	-20(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -371(%rbp)
	movzbl	-371(%rbp), %eax
	movw	%ax, -288(%rbp)
	movzwl	-290(%rbp), %edx
	movzwl	-288(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -286(%rbp)
	movl	-68(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -16(%rbp)
	movl	-16(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -370(%rbp)
	movzbl	-370(%rbp), %eax
	movw	%ax, -284(%rbp)
	movzwl	-286(%rbp), %edx
	movzwl	-284(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -282(%rbp)
	movzwl	-282(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -280(%rbp)
	movzwl	-292(%rbp), %edx
	movzwl	-280(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -278(%rbp)
	movzwl	-278(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -276(%rbp)
	movzwl	-276(%rbp), %eax
	movb	%al, -369(%rbp)
	movl	-56(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -12(%rbp)
	movl	-12(%rbp), %eax
	movslq	%eax, %rdx
	movq	-8(%rbp), %rax
	addq	%rax, %rdx
	movzbl	-369(%rbp), %eax
	movb	%al, (%rdx)
	movl	-172(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -368(%rbp)
	movzbl	-368(%rbp), %eax
	movw	%ax, -274(%rbp)
	movl	-156(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -367(%rbp)
	movzbl	-367(%rbp), %eax
	movw	%ax, -272(%rbp)
	movzwl	-274(%rbp), %edx
	movzwl	-272(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -270(%rbp)
	movl	-140(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -366(%rbp)
	movzbl	-366(%rbp), %eax
	movw	%ax, -268(%rbp)
	movzwl	-270(%rbp), %edx
	movzwl	-268(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -266(%rbp)
	movzwl	-266(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -264(%rbp)
	movl	-128(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -365(%rbp)
	movzbl	-365(%rbp), %eax
	movw	%ax, -262(%rbp)
	movl	-116(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -364(%rbp)
	movzbl	-364(%rbp), %eax
	movw	%ax, -260(%rbp)
	movzwl	-262(%rbp), %edx
	movzwl	-260(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -258(%rbp)
	movl	-104(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -363(%rbp)
	movzbl	-363(%rbp), %eax
	movw	%ax, -256(%rbp)
	movzwl	-258(%rbp), %edx
	movzwl	-256(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -254(%rbp)
	movzwl	-254(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -252(%rbp)
	movzwl	-264(%rbp), %edx
	movzwl	-252(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -250(%rbp)
	movl	-92(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -362(%rbp)
	movzbl	-362(%rbp), %eax
	movw	%ax, -248(%rbp)
	movl	-80(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -361(%rbp)
	movzbl	-361(%rbp), %eax
	movw	%ax, -246(%rbp)
	movzwl	-248(%rbp), %edx
	movzwl	-246(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -244(%rbp)
	movl	-68(%rbp), %eax
	movslq	%eax, %rdx
	movq	-408(%rbp), %rax
	addq	%rdx, %rax
	movzbl	(%rax), %eax
	movb	%al, -360(%rbp)
	movzbl	-360(%rbp), %eax
	movw	%ax, -242(%rbp)
	movzwl	-244(%rbp), %edx
	movzwl	-242(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -240(%rbp)
	movzwl	-240(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -238(%rbp)
	movzwl	-250(%rbp), %edx
	movzwl	-238(%rbp), %eax
	addl	%edx, %eax
	movw	%ax, -236(%rbp)
	movzwl	-236(%rbp), %eax
	movzwl	%ax, %eax
	imull	$43691, %eax, %eax
	shrl	$16, %eax
	shrw	%ax
	movw	%ax, -234(%rbp)
	movzwl	-234(%rbp), %eax
	movb	%al, -359(%rbp)
	movl	-56(%rbp), %eax
	movslq	%eax, %rdx
	movq	-8(%rbp), %rax
	addq	%rax, %rdx
	movzbl	-359(%rbp), %eax
	movb	%al, (%rdx)
	addl	$1, -228(%rbp)
.L3:
	movl	-228(%rbp), %eax
	cmpl	-224(%rbp), %eax
	jl	.L4
	addl	$1, -232(%rbp)
.L2:
	movl	-232(%rbp), %eax
	cmpl	-216(%rbp), %eax
	jl	.L5
	movl	-204(%rbp), %eax
	movslq	%eax, %rdx
	movq	-8(%rbp), %rcx
	movq	-416(%rbp), %rax
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	memcpy@PLT
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	call	free@PLT
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3667:
	.size	pipeline, .-pipeline
	.globl	WIDTH_OUT_DIFF
	.data
	.align 4
	.type	WIDTH_OUT_DIFF, @object
	.size	WIDTH_OUT_DIFF, 4
WIDTH_OUT_DIFF:
	.long	2
	.globl	HEIGHT_OUT_DIFF
	.align 4
	.type	HEIGHT_OUT_DIFF, @object
	.size	HEIGHT_OUT_DIFF, 4
HEIGHT_OUT_DIFF:
	.long	2
	.ident	"GCC: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0"
	.section	.note.GNU-stack,"",@progbits
